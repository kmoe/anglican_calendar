/*!

This is an ad-hoc program to generate a map of tags. The tags are
generated by the `process_data` ad-hoc program and are then used by
the main program to identify events e.g. 'christmas' for Christmas
Day. Different 'provinces' sometimes use different names for the same
event (e.g. "Nativityof Our Lord", "Christmas Day" etc) so the idea is
that the same tag is used for all the events in different calendars
that are in fact the same event. These tags are also used in the
`edit_data` to indicate which event an edit should be applied to. This
porgram is used to input the different tags for a single event. This
means that the same edit can be applied to multiple calendars. */

use ron::ser::to_string_pretty;
use std::collections::HashMap;
use std::fs::File;
use std::io::BufWriter;
use std::io::Write;

fn main() {
    let mut fix1: HashMap<String, String> = HashMap::new();
    addfix(&mut fix1, "óscar romero", "oscar romero");
    addfix(&mut fix1, "aelred", "aelred of hexham"); //??
    addfix(&mut fix1, "aidan of lindisfarne", "aidan"); //??
    addfix(&mut fix1, "all saints' day", "all saints");
    addfix(&mut fix1, "ambrose of milan", "ambrose");
    addfix(&mut fix1, "andrew", "andrew the apostle");
    addfix(&mut fix1, "ansgar", "anskar"); //??
    addfix(&mut fix1, "barnabas", "barnabas the apostle");
    addfix(&mut fix1, "bartholomew", "bartholomew the apostle");
    addfix(&mut fix1, "bede of jarorw", "bede");
    addfix(&mut fix1, "christmas", "christmas day");
    addfix(&mut fix1, "the nativity of jesus christ", "christmas day");
    addfix(
        &mut fix1,
        "commemoration of all faithful departed",
        "all souls",
    );
    addfix(
        &mut fix1,
        "commemoration of the faithful departed (all souls' day)",
        "all souls",
    );
    addfix(&mut fix1, "cuthbert of lindisfarne", "cuthbert");
    addfix(&mut fix1, "cyprian of carthage", "cyprian");
    addfix(&mut fix1, "hilda of whitby", "hilda");
    addfix(&mut fix1, "hildegard of bingen", "hildegard");
    addfix(&mut fix1, "irenaeus", "irenæus");
    addfix(&mut fix1, "julian", "julian of norwich");
    addfix(&mut fix1, "justin martyr", "justin");
    addfix(&mut fix1, "lawrence", "laurence");
    addfix(&mut fix1, "leo i", "leo the great");
    addfix(&mut fix1, "leo of rome", "leo the great");
    addfix(&mut fix1, "luke", "luke the evangelist");
    addfix(&mut fix1, "mark", "mark the evangelist");
    addfix(&mut fix1, "martin of tours", "martin");
    addfix(&mut fix1, "monnica of hippo", "monica");
    addfix(
        &mut fix1,
        "the presentation of christ in the temple",
        "candlemas",
    );
    addfix(
        &mut fix1,
        "the presentation of christ in the temple (candlemas)",
        "candlemas",
    );
    addfix(
        &mut fix1,
        "the presentation of our lord jesus christ in the temple",
        "candlemas",
    );
    addfix(
        &mut fix1,
        "the transfiguration of our lord jesus christ",
        "transfiguration",
    );
    addfix(
        &mut fix1,
        "the transfiguration of our lord",
        "transfiguration",
    );
    addfix(&mut fix1, "thomas", "thomas the apostle");
    addfix(&mut fix1, "saint thomas the apostle", "thomas the apostle");
    addfix(&mut fix1, "saint andrew", "andrew the apostle");
    addfix(&mut fix1, "saint andrew the apostle", "andrew the apostle");
    addfix(
        &mut fix1,
        "saint mark the evangelist",
        "mark the evangelist",
    );
    addfix(
        &mut fix1,
        "saint luke the evangelist",
        "luke the evangelist",
    );
    addfix(
        &mut fix1,
        "transfiguration of jesus",
        "the transfiguration of our lord",
    );
    addfix(&mut fix1, "bede", "the venerable bede");
    addfix(
        &mut fix1,
        "the visitation of the blessed virgin mary",
        "visitation",
    );
    addfix(
        &mut fix1,
        "the visit of the blessed virgin mary to elizabeth",
        "visitation",
    );
    addfix(
        &mut fix1,
        "the visitation of the blessed virgin mary to elizabeth",
        "visitation",
    );
    addfix(
        &mut fix1,
        "saint barnabas the apostle",
        "barnabas the apostle",
    ); //??
    addfix(
        &mut fix1,
        "saint bartholomew the apostle",
        "bartholomew the apostle",
    );
    addfix(&mut fix1, "saint dominic", "dominic");
    addfix(&mut fix1, "saint john", "john");
    addfix(&mut fix1, "saint joseph", "joseph");
    addfix(&mut fix1, "saint jude", "jude");
    addfix(&mut fix1, "saint mary magdalene", "mary magdalene"); //??
    addfix(&mut fix1, "saint mary the virgin", "mary the virgin"); //??
    addfix(&mut fix1, "saint matthew", "matthew");
    addfix(&mut fix1, "matthew the evangelist", "matthew");
    addfix(
        &mut fix1,
        "saint matthias the apostle",
        "matthias the apostle",
    );
    addfix(&mut fix1, "matthias", "matthias the apostle");
    addfix(&mut fix1, "saint michael and all angels", "michael");
    addfix(&mut fix1, "michael", "michael and all angels");
    addfix(&mut fix1, "saint paul the apostle", "paul");
    addfix(&mut fix1, "saint peter and saint paul", "peter and paul"); //??
    addfix(&mut fix1, "saint stephen", "stephen"); //??

    addfix(
        &mut fix1,
        "the annunciation of our lord jesus christ to the blessed virgin mary",
        "annunciation",
    );
    addfix(
        &mut fix1,
        "the annunciation of our lord to the blessed virgin mary",
        "annunciation",
    );
    addfix(
        &mut fix1,
        "the annunciation to the blessed virgin mary",
        "annunciation",
    );
    addfix(
        &mut fix1,
        "annunciation",
        "the annunciation of our lord to the blessed virgin mary",
    );
    addfix(
        &mut fix1,
        "the epiphany of our lord jesus christ",
        "epiphany",
    );
    addfix(&mut fix1, "the epiphany", "epiphany");
    addfix(
        &mut fix1,
        "the visit of the blessed virgin mary to elizabet",
        "visitation",
    );
    addfix(
        &mut fix1,
        "the visit of the blessed virgin mary to elizabeth",
        "visitation",
    );
    addfix(&mut fix1, "jeanne d’arc", "joan of arc");
    addfix(&mut fix1, "john the apostle", "john"); //??
    addfix(&mut fix1, "john wycliffe", "john wyclif");
    addfix(&mut fix1, "nicholas of myra", "nicholas");
    addfix(&mut fix1, "remegius", "remigius");
    addfix(&mut fix1, "scholastica of nursia", "scholastica");
    addfix(&mut fix1, "teresa of ávila", "teresa of avila");
    addfix(&mut fix1, "willibrord", "willibrord of york");
    addfix(&mut fix1, "oswald of northumbria", "oswald");
    addfix(&mut fix1, "ninian of galloway", "ninian");
    addfix(&mut fix1, "joseph", "joseph of nazareth");
    addfix(&mut fix1, "ignatius of antioch", "ignatius of antioch");
    addfix(&mut fix1, "holy cross", "holy cross day");
    addfix(&mut fix1, "hilary of poitiers", "hilary");
    addfix(&mut fix1, "all souls' day", "all souls");
    //
    let out_file = "/tmp/tagfixes.rs";
    let of = File::create(out_file).unwrap();
    let mut bw = BufWriter::new(of);
    let s = to_string_pretty(&fix1, ron::ser::PrettyConfig::default()).unwrap();
    let _ = bw.write(s.as_bytes()).unwrap();
    bw.flush().unwrap();
}
fn addfix(fix1: &mut HashMap<String, String>, stra: &str, strb: &str) {
    let new_tag1 = if stra.len() < strb.len() {
        stra.to_string()
    } else {
        strb.to_string()
    };
    let new_tag2 = new_tag1
        .replace("saint", "")
        .replace("the evangelist", "")
        .replace("the apostle", "")
        .replace("of our lord jesus christ", "")
        .replace("of our lord", "")
        .replace("of jesus", "")
        .replace(" day", " ")
        .replace("  ", " ")
        .trim()
        .to_string();
    let mut extra_fixes: HashMap<String, String> = HashMap::new();
    extra_fixes.insert("all s".to_string(), "all saints".to_string());
    let new_tag3 = match extra_fixes.get(&new_tag2) {
        Some(xf) => xf,
        None => &new_tag2,
    };
    if stra != new_tag3 {
        fix1.insert(stra.to_string(), new_tag3.clone());
    }
    if strb != new_tag3 {
        fix1.insert(strb.to_string(), new_tag3.clone());
    }
}
